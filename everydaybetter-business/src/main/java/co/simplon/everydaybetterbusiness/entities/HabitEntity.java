package co.simplon.everydaybetterbusiness.entities;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;

import java.time.Instant;
import java.time.LocalDate;


@Entity
@Table(name = "t_habits")
public class HabitEntity {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(name = "habit_name", nullable = false)
    private String habitName;

    @Column(name = "description")
    private String description;

    @Column(name = "positive", nullable = false, columnDefinition = "boolean default true")
    private Boolean positive;

    //add default if necessary
    @Column(name= "created_time")
    private Instant createdTime;

    //add default if necessary
    @Column(name = "updated_time")
    private Instant updateTime;

    @ManyToOne
    @JoinColumn(name= "label_id")
    private LabelEntity labelEntity;

    @ManyToOne
    @JoinColumn(name = "account_id")
    private AccountEntity accountEntity;

    public HabitEntity() {
        //ORM
    }

    public Long getId() {
        return id;
    }

    public String getHabitName() {
        return habitName;
    }

    public String getDescription() {
        return description;
    }

    public Boolean getPositive() {
        return positive;
    }

    public Instant getCreatedTime() {
        return createdTime;
    }

    public Instant getUpdateTime() {
        return updateTime;
    }

    public LabelEntity getLabelEntity() {
        return labelEntity;
    }

    public AccountEntity getAccountEntity() {
        return accountEntity;
    }

    @SuppressWarnings("unused")
    private void setId(Long id) {
        this.id = id;
    }

    public void setHabitName(String habitName) {
        this.habitName = habitName;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public void setPositive(Boolean positive) {
        this.positive = positive;
    }

    public void setCreatedTime(Instant createdTime) {
        this.createdTime = createdTime;
    }

    public void setUpdateTime(Instant updateTime) {
        this.updateTime = updateTime;
    }

    public void setLabelEntity(LabelEntity labelEntity) {
        this.labelEntity = labelEntity;
    }

    public void setAccountEntity(AccountEntity accountEntity) {
        this.accountEntity = accountEntity;
    }
}

//Note: if we use for id: @Setter(AccessLevel.NONE) setId will not be generated by Lombok
